substitutions:
  num_leds: "60"

esp8266:
  board: nodemcuv2
  framework:
    version: recommended
  restore_from_flash: true

esphome:
  name: nodemcu_uhr
  includes:
    - "clock.h"
  on_boot:
    # set "loading" effect while initializing
    priority: 500.0
    then:
      # enable clock effect after boot
      - light.turn_on:
          id: light_ring
          brightness: 100%
          effect: Sync

wifi:
  fast_connect: True  # only needed for hidden SSID
  networks:
    - ssid: !secret wifi_iot_ssid
      bssid: !secret wifi_iot_bssid
      password: !secret wifi_iot_password
      hidden: true

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Clock FB AP"
    password: !secret clock_fallback_ap_password

captive_portal:

ota:
  password: !secret clock_ota_password

globals:
  - id: clock_brightness
    type: int
    restore_value: yes
    initial_value: '255'

  - id: clock_indicators_enabled
    type: bool
    restore_value: yes
    initial_value: 'true'

  - id: clock_seconds_enabled
    type: bool
    restore_value: yes
    initial_value: 'true'

  - id: wide_hour_hand_enabled
    type: bool
    restore_value: yes
    initial_value: 'false'

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Berlin
    on_time_sync:
      then:
        - light.turn_on:
            id: light_ring
            effect: Clock

switch:
  - platform: template
    name: "Clock Indicators"
    icon: mdi:progress-clock
    lambda: !lambda |-
      return id(clock_indicators_enabled);
    turn_on_action:
      globals.set:
        id: clock_indicators_enabled
        value: 'true'
    turn_off_action: 
      globals.set:
        id: clock_indicators_enabled
        value: 'false'

  - platform: template
    name: "Clock Seconds"
    icon: mdi:update
    lambda: !lambda |-
      return id(clock_seconds_enabled);
    turn_on_action:
      globals.set:
        id: clock_seconds_enabled
        value: 'true'
    turn_off_action:
      globals.set:
        id: clock_seconds_enabled
        value: 'false'

  - platform: template
    name: "Wide Hour Hand"
    lambda: !lambda |-
      return id(wide_hour_hand_enabled);
    turn_on_action:
      globals.set:
        id: wide_hour_hand_enabled
        value: 'true'
    turn_off_action:
      globals.set:
        id: wide_hour_hand_enabled
        value: 'false'

light:
  - id: light_ring
    internal: False
    platform: neopixelbus
    type: GRB
    variant: SK6812 # WS2812X
    pin: RX #GPIO23
    num_leds: "${num_leds}"
    method: ESP8266_DMA
    name: "NeoPixel Light"
    color_correct: [50%, 50%, 50%]
    effects:
      - addressable_lambda:
          name: "Clock"
          update_interval: 32ms
          lambda: |-
            auto time = id(sntp_time).now();
            int offset = 0;
            update_clock_hands(it, time, offset);
      - addressable_scan:
          name: Sync
          move_interval: 100ms
          scan_width: 1